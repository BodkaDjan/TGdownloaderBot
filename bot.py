import logging
import re
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
import yt_dlp
import os

# === –õ–æ–≥—É–≤–∞–Ω–Ω—è ===
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)


# === –§—É–Ω—Ü—ñ—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —ñ–º–µ–Ω—ñ —Ñ–∞–π–ª—É ===
def clean_filename(filename: str) -> str:
    """–í–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–∏—Ö —Å–∏–º–≤–æ–ª—ñ–≤"""
    return re.sub(r'[<>:"/\\|?*\x00-\x1F]', '', filename)  # –í–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–∏—Ö —Å–∏–º–≤–æ–ª—ñ–≤


# === –§—É–Ω–∫—Ü—ñ—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—ñ–¥–µ–æ ===
def download_video(url: str) -> str:
    """–°–∫–∞—á—É—î –≤—ñ–¥–µ–æ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É """
    try:
        os.makedirs('downloads', exist_ok=True)  # —Å—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–ø–∫—É –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—ñ–¥–µ–æ
        ydl_opts = {
            'format': 'best',
            'outtmpl': 'downloads/%(title)s.%(ext)s',  # —à–ª—è—Ö –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É
            'quiet': True,
            'noplaylist': True,
        }
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info_dict = ydl.extract_info(url, download=True)
            raw_video_path = ydl.prepare_filename(info_dict)  # —à–ª—è—Ö –¥–æ –≤—ñ–¥–µ–æ
            cleaned_path = 'downloads/' + clean_filename(os.path.basename(raw_video_path))  # –û—á–∏—Å—Ç–∫–∞ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
            os.rename(raw_video_path, cleaned_path)  # –ó–º—ñ–Ω—é—î–º–æ —Ñ–∞–π–ª
            return cleaned_path
    except Exception as e:
        logging.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∑–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞–Ω–Ω—è  –≤—ñ–¥–µ–æ: {e}")
        return f"–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∑–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞–Ω–Ω—è  –≤—ñ–¥–µ–æ: {e}"


# === –æ–±—Ä–æ–±–Ω–∏–∫ /START ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–æ–≥–æ —Å–º—Å"""
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤—ñ—Ç –≤—ñ–¥–ø—Ä–∞–≤ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤—ñ–¥–µ–æ –∑ Tik-Tok —á–∏ YouTube —ñ —è —Å–∫–∞—á–∞—é –π–æ–≥–æ –¥–ª—è —Ç–µ–±–µ )"
    )

# === –æ–±—Ä–æ–±–Ω–∏–∫ —Å–º—Å —ñ–∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º ===
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–æ–±–ª—é—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è —ñ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î –≤—ñ–¥–µ–æ"""
    url = update.message.text.strip()

    if 'youtube.com' in url or 'youtu.be' in url or 'tiktok.com' in url:
        await update.message.reply_text("‚è≥ –ó–∞—á–µ–∫–∞–π —Ç—Ä–æ—Ö–∏ –∫–∞—á–∞—é –≤—ñ–¥–µ–æ , —Ü—ñ —Ñ—ñ–∫—Å–∏–∫–∏ –∑–∞–¥—Ä–∞–ª–∏ —Ç–∞–∫ –ø–æ–≤—ñ–ª—å–Ω–æ –≤—Å–µ —Ä–æ–±–∏—Ç–∏ ...")

        video_path = download_video(url)

        if "–û—à–∏–±–∫–∞" in video_path:
            await update.message.reply_text(f"‚ùå {video_path}")
        else:
            try:
                await update.message.reply_video(video=open(video_path, 'rb'))  # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤—ñ–¥–µ–æ
                os.remove(video_path)  # –í–∏–¥–∞–ª–µ–Ω–Ω—è –≤—ñ–¥–µ–æ –ø—ñ—Å–ª—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è
            except Exception as e:
                logging.error(f"–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–µ–æ: {e}")
                await update.message.reply_text("‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω—ñ –≤—ñ–¥–µ–æ ")
    else:
        await update.message.reply_text("üö´ ***–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –∫–æ—Ä–µ–∫—Ç–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ YouTube  –∞–±–æ  TikTok –≤—ñ–¥–µ–æ.")


# === –û–°–ù–û–í–ù–û–ô –ó–ê–ü–£–°–ö –ë–û–¢–ê ===
def main():
    """–ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞."""
    TOKEN = '7082564547:AAG9XMs-60ddGL7kmOKukEbt2J73-GTqRts'

    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    logging.info("–ë–æ—Ç –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏ ...")
    app.run_polling()


if __name__ == '__main__':
    main()
